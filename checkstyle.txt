Starting audit...
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\AnnualChanges.java:6:26: Name 'NewSantaBudget' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\AnnualChanges.java:11:26: Parameter newSantaBudget should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\AnnualChanges.java:11:49: Parameter giftList should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\AnnualChanges.java:12:26: Parameter newChildren should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\AnnualChanges.java:12:51: Parameter childrenUpdates should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\AnnualChanges.java:19:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'getNewSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'getNewSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\AnnualChanges.java:23:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'getGiftList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'getGiftList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\AnnualChanges.java:27:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'getNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'getNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\AnnualChanges.java:31:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'getChildrenUpdates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'getChildrenUpdates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\AnnualChanges.java:35:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\AnnualChanges.java:37:33: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\AnnualChanges.java:38:52: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\AnnualChanges.java:39:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\AnnualChanges.java:40:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\AnnualChanges.java:41:56: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\AnnualChildren.java:9:27: Parameter numberOfYears should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\AnnualChildren.java:9:50: Parameter children should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\AnnualChildren.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\AnnualChildren.java:14:35: Parameter year should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\AnnualChildren.java:14:49: Parameter children should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\AnnualChildren.java:14:67: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:18:18: Parameter id should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:18:30: Parameter lastName should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:18:47: Parameter firstName should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:18:65: Parameter age should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:19:18: Parameter city should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:19:31: Parameter averageScore should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:20:18: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:34:18: Parameter child should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:47:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'addNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'addNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:47:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:47:30: Parameter newScore should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:52:13: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:60:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:60:33: Parameter averageScore should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:64:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:68:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:68:35: Parameter assignedBudget should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:72:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getReceivedGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getReceivedGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:76:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:76:24: Parameter age should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:80:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getNiceScoreHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getNiceScoreHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:84:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:88:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:92:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:96:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:100:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:104:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:108:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getGiftsPreference' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getGiftsPreference' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:112:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:114:25: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:115:28: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:116:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:117:52: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:118:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:119:32: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:120:58: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:121:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:122:58: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:123:54: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Child.java:124:52: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Children.java:8:21: Parameter dataStore should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\ChildUpdate.java:11:24: Parameter id should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\ChildUpdate.java:11:36: Parameter niceScore should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\ChildUpdate.java:11:54: Parameter giftsPreference should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\ChildUpdate.java:17:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\ChildUpdate.java:21:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\ChildUpdate.java:25:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getGiftsPreference' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getGiftsPreference' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\gift.java:3:14: Name 'gift' must match pattern '^[A-Z][a-zA-Z0-9]*$'. [TypeName]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\gift.java:9:17: Parameter productName should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\gift.java:9:37: Parameter price should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\gift.java:9:51: Parameter category should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\gift.java:15:5: Class 'gift' looks like designed for extension (can be subclassed), but the method 'getProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'gift' final or making the method 'getProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\gift.java:19:5: Class 'gift' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'gift' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\gift.java:23:5: Class 'gift' looks like designed for extension (can be subclassed), but the method 'getCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'gift' final or making the method 'getCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\gift.java:27:5: Class 'gift' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'gift' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\gift.java:29:24: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\gift.java:30:54: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\gift.java:31:36: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\gift.java:32:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputData.java:12: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputData.java:13: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputData.java:22:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getNumberOfYears' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getNumberOfYears' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputData.java:26:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputData.java:30:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getDataStore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getDataStore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputData.java:34:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getAnnualChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getAnnualChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputLoader.java:16:24: Parameter inputPath should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputLoader.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputLoader.java:36:17: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputLoader.java:37:21: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputLoader.java:38: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputLoader.java:39:42: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputLoader.java:40:42: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputLoader.java:41: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputLoader.java:42:42: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputLoader.java:43: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputLoader.java:50:17: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputLoader.java:51:21: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputLoader.java:52: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputLoader.java:53: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputLoader.java:62:17: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputLoader.java:63: Line is longer than 100 characters (found 143). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputLoader.java:64: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputLoader.java:65: Line is longer than 100 characters (found 125). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputLoader.java:66: Line is longer than 100 characters (found 131). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputLoader.java:72:49: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputLoader.java:76: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:9:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:12:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:18:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:20:13: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:29:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:30:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:33: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:43:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:47: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:52: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:63:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:68: Line is longer than 100 characters (found 125). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:69: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:73: Line is longer than 100 characters (found 125). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\Main.java:20:29: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:4:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:13:1: Class SingleRun should be declared as final. [FinalClass]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:27:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:36:52: '+' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:36:56: '+' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:41:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:46:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:54: Line is longer than 100 characters (found 103). [LineLength]
Audit done.
Checkstyle ends with 133 errors.
