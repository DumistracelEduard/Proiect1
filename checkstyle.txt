Starting audit...
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Average\Average.java:8:20: Parameter averageScoreCalculator should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Average\Average.java:12:5: Class 'Average' looks like designed for extension (can be subclassed), but the method 'executeAverage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Average' final or making the method 'executeAverage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Average\Average.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Average\Average.java:12:34: Parameter niceScoreHistory should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Average\averageBaby.java:5:14: Name 'averageBaby' must match pattern '^[A-Z][a-zA-Z0-9]*$'. [TypeName]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Average\averageBaby.java:6:5: Class 'averageBaby' looks like designed for extension (can be subclassed), but the method 'doAverage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'averageBaby' final or making the method 'doAverage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Average\averageBaby.java:7:29: Parameter niceScoreHistory should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Average\averageBaby.java:8:16: '10' is a magic number. [MagicNumber]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Average\averageKid.java:5:14: Name 'averageKid' must match pattern '^[A-Z][a-zA-Z0-9]*$'. [TypeName]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Average\averageKid.java:6:5: Class 'averageKid' looks like designed for extension (can be subclassed), but the method 'doAverage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'averageKid' final or making the method 'doAverage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Average\averageKid.java:7:29: Parameter niceScoreHistory should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Average\averageKid.java:8:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Average\averageKid.java:13:23: '/' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Average\averageKid.java:13:23: '/' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Average\AverageScoreCalculator.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Average\AverageScoreCalculator.java:6:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Average\averageTeen.java:5:14: Name 'averageTeen' must match pattern '^[A-Z][a-zA-Z0-9]*$'. [TypeName]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Average\averageTeen.java:6:5: Class 'averageTeen' looks like designed for extension (can be subclassed), but the method 'doAverage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'averageTeen' final or making the method 'doAverage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Average\averageTeen.java:7:29: Parameter niceScoreHistory should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Average\averageTeen.java:14:19: '/' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Average\averageTeen.java:14:19: '/' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputData.java:16: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputData.java:17: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputData.java:26:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getNumberOfYears' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getNumberOfYears' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputData.java:30:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputData.java:34:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getDataStore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getDataStore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputData.java:38:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getAnnualChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getAnnualChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputLoader.java:21:24: Parameter inputPath should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputLoader.java:25:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputLoader.java:41:17: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputLoader.java:42:21: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputLoader.java:43: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputLoader.java:44:42: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputLoader.java:45:42: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputLoader.java:46: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputLoader.java:47: Line is longer than 100 characters (found 154). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputLoader.java:47:42: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputLoader.java:47:89: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputLoader.java:49: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputLoader.java:54:17: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputLoader.java:55:21: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputLoader.java:56: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputLoader.java:57: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputLoader.java:66:17: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputLoader.java:67: Line is longer than 100 characters (found 143). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputLoader.java:68: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputLoader.java:69: Line is longer than 100 characters (found 125). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputLoader.java:70: Line is longer than 100 characters (found 131). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputLoader.java:76:49: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\DataStore\InputLoader.java:80: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChanges.java:6:26: Name 'NewSantaBudget' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChanges.java:11:26: Parameter newSantaBudget should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChanges.java:11:49: Parameter giftList should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChanges.java:12:26: Parameter newChildren should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChanges.java:12:51: Parameter childrenUpdates should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChanges.java:19:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'getNewSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'getNewSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChanges.java:23:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'getGiftList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'getGiftList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChanges.java:27:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'getNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'getNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChanges.java:31:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'getChildrenUpdates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'getChildrenUpdates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChanges.java:35:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChanges.java:37:33: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChanges.java:38:52: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChanges.java:39:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChanges.java:40:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChanges.java:41:56: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:3:8: Unused import - main.SingleRun. [UnusedImports]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:5:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:12:27: Parameter numberOfYears should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:12:50: Parameter children should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:17:29: Parameter children should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:17:48: Parameter newChildren should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:19:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:21:13: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:27:17: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:27:40: '18' is a magic number. [MagicNumber]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:38:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:38:28: Parameter listGift should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:38:71: Parameter newGifts should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:39:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:40:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:42: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:51:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:51:33: Parameter childUpdates should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:51:65: Parameter children should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:51:83: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:53:13: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:54:17: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:62:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:62:30: Parameter annualChanges should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:62:65: Parameter annualChildren should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:62:80: 'annualChildren' hides a field. [HiddenField]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:63:30: Parameter listGift should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:63:73: Parameter numberOfYears should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:85:34: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\AnnualChildren.java:86:52: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:24:18: Parameter child should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:34:18: Parameter id should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:34:30: Parameter lastName should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:34:47: Parameter firstName should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:34:65: Parameter age should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:35:18: Parameter city should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:35:29: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:35:30: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:35:66: Parameter averageScore should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:47: Line has trailing spaces. [RegexpSingleline]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:48:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'updateGiftPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'updateGiftPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:48:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:48:39: Parameter newPreferences should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:53:17: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:64:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:65:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:73:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'calculateBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'calculateBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:73:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:73:35: Parameter budgetUnit should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:73:53: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:78:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'calculateAverage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'calculateAverage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:78:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:79:19: '5' is a magic number. [MagicNumber]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:82:16: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:82:18: '(' is followed by whitespace. [ParenPad]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:82:26: '12' is a magic number. [MagicNumber]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:91:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'addNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'addNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:91:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:91:30: Parameter newScore should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:92:38: '18' is a magic number. [MagicNumber]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:98:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:102:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:106:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:110:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:114:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:118:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:118:24: Parameter age should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:122:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:126:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:130:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:130:33: Parameter averageScore should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:134:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getNiceScoreHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getNiceScoreHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:138:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:142:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:142:35: Parameter assignedBudget should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:146:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getReceivedGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getReceivedGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:150:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:152:25: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:153:28: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:154:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:155:52: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:156:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:157:32: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:158:58: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:159:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:160:58: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:161:54: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Child.java:162:52: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Children.java:11:21: Parameter children should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Children.java:14:34: '18' is a magic number. [MagicNumber]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Children.java:20:21: Parameter dataStore should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Children.java:30:28: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Children.java:31:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\ChildUpdate.java:11:24: Parameter id should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\ChildUpdate.java:11:36: Parameter niceScore should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\ChildUpdate.java:11:54: Parameter giftsPreference should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\ChildUpdate.java:17:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\ChildUpdate.java:21:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\ChildUpdate.java:25:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getGiftsPreference' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getGiftsPreference' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Gift.java:9:17: Parameter productName should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Gift.java:9:37: Parameter price should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Gift.java:9:51: Parameter category should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Gift.java:15:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Gift.java:19:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Gift.java:23:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Gift.java:27:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Gift.java:29:24: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Gift.java:30:54: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Gift.java:31:36: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\InputClass\Gift.java:32:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:10:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:12:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:12:19: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:14: Line is longer than 100 characters (found 122). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:14:41: Parameter budgetUnit should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:14:60: Parameter children should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:14:79: Parameter listGift should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:17:13: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:18: Line is longer than 100 characters (found 123). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:21:1: Empty statement. [EmptyStatement]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:21:17: '}' at column 17 should have line break before. [RightCurly]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:30:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:34:40: Parameter o1 should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:34:49: Parameter o2 should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:47:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:49:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:50:46: '18' is a magic number. [MagicNumber]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:57:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:58:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:60:13: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:69:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:70:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:73: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:83:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:87: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:94: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:104:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:109: Line is longer than 100 characters (found 125). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:110: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\fileio\Utils.java:114: Line is longer than 100 characters (found 125). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\Main.java:20:29: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:4:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:7:25: Using the '.*' form of import should be avoided - fileio.InputClass.*. [AvoidStarImport]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:14:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:16:1: Class SingleRun should be declared as final. [FinalClass]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:36:29: '26' is a magic number. [MagicNumber]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:37:52: '+' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:37:56: '+' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:43: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:43:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:43:38: Parameter children should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:43:57: Parameter santaBudget should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:43:77: Parameter listGift should be final. [FinalParameters]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:54:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:67: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] C:\Users\eduar\Desktop\proiect1\.\src\main\SingleRun.java:70: Line is longer than 100 characters (found 103). [LineLength]
Audit done.
Checkstyle ends with 226 errors.
